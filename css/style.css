@import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed:ital,wght@0,100..900;1,100..900&family=Roboto+Mono:ital,wght@0,100..700;1,100..700&display=swap');
@import url("https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20,400,0,0&icon_names=bolt,timelapse,token");

:root {
    /* system font stack with Roboto Condensed as primary */
    --font-sans: "Roboto Condensed", system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    --font-mono: "Roboto Mono", ui-monospace, SFMono-Regular, Menlo, Consolas, "Liberation Mono", monospace;

    color-scheme: dark;
    --hue: 220;
    --tick-duration: 6s;
    /* calm blue base, can turn red, when engine gets damaged */
    --bg-color: hsl(var(--hue) 30% 15%);
    --font-color: hsl(var(--hue), 20%, 85%);
    accent-color: auto;
    /* change to your highlight color when needed */

}

@media (prefers-reduced-motion: reduce) {

    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}

/*
-------------------------------------------------------------------
RESET
-------------------------------------------------------------------
*/

*,
*::before,
*::after {
    box-sizing: border-box;
    /* disable double tap to zoom. only use in mobile-pwa */
    /* touch-action: manipulation; */
}

/*
-------------------------------------------------------------------
BASE
-------------------------------------------------------------------
*/

/* Utility */
.mono,
pre,
code,
kbd,
samp {
    font-family: var(--font-mono);
}

.icon {
    font-family: 'Material Symbols Outlined';
    vertical-align: bottom;
}

html {
    /* Removes tap highlight on touch devices */
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    margin: 0;
    padding: 0;
    min-height: 100dvh;
}

/* Allow smooth interpolation of the custom property */
@property --angle {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}

@keyframes spinGradient {
    from {
        --angle: 0deg;
    }

    to {
        --angle: 360deg;
    }
}

body {
    --angle: 0deg;
    background-color: var(--bg-color);
    background: linear-gradient(var(--angle),
            hsl(var(--hue) 35% 25%) 0%,
            hsl(var(--hue) 30% 20%) 50%,
            hsl(var(--hue) 30% 15%) 100%);
    animation: spinGradient var(--tick-duration) linear infinite;
    /* Disables selecting text (useful for PWAs to prevent unwanted text selection during interactions) */
    /* user-select: none;
    -webkit-user-select: none; */
    /* Disables touch and hold callout on iOS (prevents the menu that appears on long press, useful for PWAs) */
    -webkit-touch-callout: none;
    margin: 0;
    padding: 0;
    color: var(--font-color);
    font-family: var(--font-sans);
    font-size: 100%;
    /* Uses dynamic viewport height for better handling of mobile viewports */
    min-height: inherit;
    line-height: 1.5;
}

@supports not (height: 100dvh) {
    html {
        height: -webkit-fill-available;
    }

    body {
        min-height: -webkit-fill-available;
    }
}

:is(h1, h2, h3, h4, h5, h6) {
    text-wrap: balance;
    line-height: 1.1;
}

p {
    text-wrap: pretty;
}

a {
    text-decoration-skip-ink: auto;
    color: currentColor;
}

input,
button,
textarea,
select {
    font-family: inherit;
    font-size: inherit;
}

img,
video,
canvas,
audio,
iframe {
    display: block;
    max-width: 100%;
}

img,
video {
    height: auto;
}

svg {
    height: auto;
    max-width: 100%;
}

:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
}


/*
-------------------------------------------------------------------
BENTO GRID
-------------------------------------------------------------------
*/

/* Grid canvas lives directly on <main> */
main {
    --cols: 12;
    --gap: 12px;
    --row: 80px;
    display: grid;
    grid-template-columns: repeat(var(--cols), minmax(0, 1fr));
    grid-auto-rows: var(--row);
    grid-auto-flow: row dense;
    gap: var(--gap);
    align-content: start;
    align-items: stretch;
    width: 100%;
    max-width: 1280px;
    margin-inline: auto;
    padding: var(--gap);
}

@media (max-width: 1044px) {
    main {
        --cols: 8;
    }
}

@media (max-width: 700px) {
    main {
        --cols: 4;
    }
}

/* Generic tile */
.tile {
    --w: 2;
    --h: 2;
    --tile-border: 1px solid hsla(0, 0%, 80%, 0.4);
    --tile-bg: hsla(0, 0%, 100%, 0.2);
    --tile-radius: 10px;
    grid-column: span min(var(--w), var(--cols));
    grid-row: span var(--h);
    background: var(--tile-bg);
    border: var(--tile-border);
    border-radius: var(--tile-radius);
    padding: 10px;
    display: grid;
    align-content: start;
    gap: 10px;
    align-self: stretch;
}

/* Explicit column spans */
.tile[data-w="1"] {
    --w: 1
}

.tile[data-w="2"] {
    --w: 2
}

.tile[data-w="3"] {
    --w: 3
}

.tile[data-w="4"] {
    --w: 4
}

.tile[data-w="5"] {
    --w: 5
}

.tile[data-w="6"] {
    --w: 6
}

.tile[data-w="7"] {
    --w: 7
}

.tile[data-w="8"] {
    --w: 8
}

.tile[data-w="9"] {
    --w: 9
}

.tile[data-w="10"] {
    --w: 10
}

.tile[data-w="11"] {
    --w: 11
}

.tile[data-w="12"] {
    --w: 12
}

/* Explicit row spans (in multiples of --row) */
.tile[data-h="1"] {
    --h: 1
}

.tile[data-h="2"] {
    --h: 2
}

.tile[data-h="3"] {
    --h: 3
}

.tile[data-h="4"] {
    --h: 4
}

.tile[data-h="5"] {
    --h: 5
}

.tile[data-h="6"] {
    --h: 6
}

/* Basic typography inside tiles (neutral) */
.tile h1 {
    margin: 0;
    font-weight: 500;
    font-size: 1.8rem;
    text-transform: uppercase;
}

.tile h2 {
    margin: 0;
    font-size: 1.4rem;
}

.tile h3 {
    margin: 0;
}

.tile p {
    margin: 0
}


/*
-------------------------------------------------------------------
METER COMPONENT (generic)
-------------------------------------------------------------------
*/

/* Allow smooth interpolation of the custom property */
@property --p {
    syntax: "<number>";
    /* 0..1 */
    inherits: false;
    initial-value: 0;
}

.meter {
    /* shared defaults */
    --p: 0;
    /* input 0..1 */
    --q: var(--p);
    /* mapping, can be overridden (e.g., wear uses 1-p) */
    --meter-h: 16px;
    --meter-bg: hsla(0, 0%, 100%, 0.1);

    height: var(--meter-h);
    background: var(--meter-bg);
    border-radius: 999px;
    overflow: visible;
    box-shadow: inset 0 0 0 1px hsla(0, 0%, 100%, 0.1);
}

.meter .fill {
    width: calc(var(--p) * 100%);
    height: 100%;
    border-radius: inherit;
    transition: width 300ms linear, background-color 300ms linear;

    /* color reacts purely to --q (0..1) */
    background-color: hsl(calc(120deg * var(--q)), 85%, 50%);
    background-image: linear-gradient(0deg, #fff1 0, #0000 60%);

    /* glow thresholds (override per tile if needed) */
    --hi-threshold: .85;
    --lo-threshold: .30;
    --hi: clamp(0, (var(--q) - var(--hi-threshold)) * 20, 1);
    --lo: clamp(0, (var(--lo-threshold) - var(--q)) * 10, 1);
    box-shadow:
        0 0 calc(10px * var(--hi)) hsl(120 85% 55% / var(--hi)),
        0 0 calc(12px * var(--lo)) hsl(0 80% 60% / var(--lo));
}


/*
-------------------------------------------------------------------
ENERGY TILE
-------------------------------------------------------------------
*/

.tile.energy .fill {
    --q: var(--p);
}

.numbers {
    display: flex;
    align-items: baseline;
    justify-content: space-between;
    gap: 5px;
    flex-wrap: wrap;
    font-family: var(--font-mono);
    font-variant-numeric: tabular-nums;
}

.numbers .consumption,
.numbers .duration {
    opacity: .9;
}

/*
-------------------------------------------------------------------
WEAR TILE
-------------------------------------------------------------------
*/

.tile.wear .fill {
    --q: calc(1 - var(--p));
}

/*
-------------------------------------------------------------------
DIAL COMPONENT (generic)
-------------------------------------------------------------------
*/

.dial {
    --p: 0;
    /* 0..1 progress */
    --angle: calc(var(--p) * 360deg);
    --size: 90px;
    --thick: 0px;
    --track: hsla(0, 0%, 100%, 0.1);
    --progress: hsl(calc(120deg * var(--p)), 85%, 50%);

    inline-size: var(--size);
    aspect-ratio: 1;
    border-radius: 50%;
    background: conic-gradient(var(--progress) 0deg var(--angle), var(--track) var(--angle) 360deg);
    mask: radial-gradient(farthest-side, transparent calc(50% - var(--thick)), #000 calc(50% - var(--thick)) 50%);
    box-shadow: inset 0 0 0 1px hsla(0, 0%, 80%, 0.4);
    margin-inline: auto;
}

/*
-------------------------------------------------------------------
TICK TILE
-------------------------------------------------------------------
*/

/* Size + colors are overrideable per tile */
.tile.tick .dial {
    --size: 90px;
    --thick: 0px;
}